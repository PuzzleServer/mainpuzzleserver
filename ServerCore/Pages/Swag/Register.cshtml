@page "/{eventId}/{eventRole}/Swag/Register"
@model ServerCore.Pages.Swag.SwagRegisterModel

@{
    ViewData["Title"] = "Lunch";
    ViewData["AdminRoute"] = "/";
    ViewData["AuthorRoute"] = "/";
    ViewData["PlayRoute"] = "../Swag/Register";
    var isEditable = DateTime.UtcNow <= Model.Event.TeamMiscDataChangeEnd;
}

<style>
    .food-option-description {
        font-style: italic;
    }
</style>

<h2>Order Lunch for @(Model.Event.Name)</h2>

@if (isEditable)
{
    <div class="alert alert-danger" role="alert">
        Please make your selections by @Html.Raw(Model.LocalTime(Model.Event.TeamMiscDataChangeEnd)).
    </div>
}
else
{
    <div class="alert alert-danger" role="alert">
        We're sorry, we cannot take any further requests at this time. We will have some extras available, but we cannot guarantee that there are enough or that we will have what you want..
    </div>
}

@if (!string.IsNullOrWhiteSpace(Model.Event.LunchOptions)) {
    <div class="row">
        <div class="col-md-4">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @* The following 3 components (first form-group, script block, custom-order form-group) have identical versions in: *@
                @*     Player\Edit.cshtml and Player\Create.cshtml, and all 3 must be modified in identical ways in future edits.   *@
                @*     They cannot be abstracted to a Partial since partials cannot modify underlying C# data.                      *@
                @*     The Event Details page also parses this data to ensure proper formatting, so also apply updates to it,       *@
                @*     as well as Team\Details.cshtml.cs which uses the Name portion to display team lunches.                       *@
                <div class="form-group">
                    <label asp-for="PlayerInEvent.Lunch" class="control-label"></label><br />
                    @{
                        var lunchOptions = Model.Event.LunchOptions.Split(";");
                        bool required = false;
                        foreach (var lunch in lunchOptions)
                        {
                            if (!string.IsNullOrWhiteSpace(lunch)) 
                            {
                                string[] lunchParts = lunch.Split(":");
                                string lunchVal = lunchParts[0].Trim().Trim('\"');
                                string lunchDesc = lunchParts[1].Trim().Trim('\"');

                                if (!required)
                                {
                                    <input asp-for="PlayerInEvent.Lunch" type="radio" class="choice" value="@lunchVal" required />
                                    required = true;
                                }
                                else
                                {
                                    <input asp-for="PlayerInEvent.Lunch" type="radio" class="choice" value="@lunchVal" />
                                }
                                <text>@lunchVal</text>
                                <div class="food-option-description">@lunchDesc</div>
                            }
                        }
                    }
                    <span asp-validation-for="PlayerInEvent.Lunch" class="text-danger"></span>
                </div>
                <script>
                    document.addEventListener("DOMContentLoaded", function(event) {
                        let order = document.getElementById("custom-order");
                        let radios = document.getElementsByClassName("choice");
                        let hideOrder = true;
                        for (let radio of radios) {
                            if ((radio.value.replaceAll(" ", "").toLowerCase() === "noneoftheabove") && (radio.checked)) {
                                hideOrder = false;
                            }
                            radio.addEventListener("click", function(event) {
                                if ((this.value.replaceAll(" ", "").toLowerCase() === "noneoftheabove") && (this.checked)) {
                                    order.hidden = false;
                                }
                                else {
                                    order.hidden = true;
                                    document.querySelector("#custom-order textarea").value = "";
                                }
                            });
                        }
                        if (hideOrder) {
                            order.hidden = true;
                        }
                    });
                </script>
                <br />
                <div id="custom-order" class="form-group">
                    <label asp-for="PlayerInEvent.LunchModifications" class="control-label"></label>
                    <textarea asp-for="PlayerInEvent.LunchModifications" class="form-control"></textarea>
                    <span asp-validation-for="PlayerInEvent.LunchModifications" class="text-danger"></span>
                </div>
                @if (isEditable)
                {
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-default" />
                </div>
                }
            </form>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
