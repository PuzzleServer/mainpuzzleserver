@page "/{eventId}/{eventRole}/AuthorSubmissions/{puzzleId}"
@model ServerCore.Pages.Submissions.AuthorIndexModel
@{
    ViewData["Title"] = "AuthorIndex";
    ViewData["AdminRoute"] = "../Submissions/AuthorIndex";
    ViewData["AuthorRoute"] = "../Submissions/AuthorIndex";
    // TODO: Needs to handle implicit teams - ViewData["PlayRoute"] = "../Submissions/Index";
    ViewData["RoutingPuzzleId"] = ViewContext.RouteData.Values["puzzleId"];
    Layout = "../Puzzles/_puzzleManagementLayout.cshtml";
}

<h2>@Model.Puzzle.Name: Submissions</h2>

<br />
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Player
                </th>
                <th>
                    Team Name
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].Response.ResponseText)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].SubmissionText)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].TimeSubmitted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Submissions)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Submitter.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Team.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Response.ResponseText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubmissionText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeSubmitted)
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

