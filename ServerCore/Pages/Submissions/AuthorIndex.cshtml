@page "/{eventId}/{eventRole}/Submissions/AuthorIndex/{puzzleId?}"
@model ServerCore.Pages.Submissions.AuthorIndexModel
@{
    ViewData["Title"] = "AuthorIndex";
    ViewData["AdminRoute"] = "../Submissions/AuthorIndex";
    ViewData["AuthorRoute"] = "../Submissions/AuthorIndex";
    // TODO: Needs to handle implicit teams - ViewData["PlayRoute"] = "../Submissions/Index";
    ViewData["RoutingPuzzleId"] = ViewContext.RouteData.Values["puzzleId"];

    if (Model.Puzzle != null)
    {
        Layout = "../Puzzles/_puzzleManagementLayout.cshtml";
    }
    else if (Model.Team != null)
    {
        Layout = "../Teams/_teamLayout.cshtml";
    }
    // TODO: Do we need a combined layout, or is that rare enough as to be unnecessary? Maybe those bar layouts should be sections/components?
}

<h2>@if (Model.Puzzle != null) { <text>@Model.Puzzle.Name:</text> } Submissions @if (Model.Team != null) { <text>by @Model.Team.Name</text> }</h2>
<a asp-page="/Puzzles/Index">Back to puzzle list</a> | <a asp-page="/Submissions/SubmissionsWithoutResponses" asp-route-puzzleId="@Model.Puzzle?.ID">Submissions without responses</a>
<div>
    @if(Model.Puzzle != null) { <a asp-page="./AuthorIndex" asp-route-puzzleId="" asp-route-teamId="@Model.Team?.ID">Clear Puzzle Filter</a> }
    @if(Model.Puzzle != null && Model.Team != null) { <text>|</text> }  
    @if(Model.Team != null) { <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="">Clear Team Filter</a> }  
    @if(Model.Puzzle != null && Model.Team != null) { <text>|</text> <a asp-page="./AuthorIndex" asp-route-puzzleId="" asp-route-teamId="">Clear All Filters</a> }  
</div>
<br/>
<div>
    Submitted answers shown below are capitalized and stripped of non-alphanumeric characters
</div>
<br />
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Player
                </th>
                <th>
                    Team Name
                </th>
                <th>
                    Puzzle
                </th>
                <th>
                    ResponseText
                </th>
                <th>
                    SubmissionText
                </th>
                <th>
                    TimeSubmitted
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Submissions)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SubmitterName)
                </td>
                <td>
                    <a asp-page="AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@item.TeamID">@Html.DisplayFor(modelItem => item.TeamName)</a>
                </td>
                <td>
                    <a asp-page="AuthorIndex" asp-route-puzzleId="@item.PuzzleID" asp-route-teamId="@Model.Team?.ID">@Html.DisplayFor(modelItem => item.PuzzleName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ResponseText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubmissionText)
                </td>
                <td>
                    @Html.Raw(Model.LocalTime(item.TimeSubmitted))
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

