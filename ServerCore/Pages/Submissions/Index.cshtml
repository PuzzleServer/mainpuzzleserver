@page "/{eventId}/{eventRole}/Submissions/{puzzleId}"
@model ServerCore.Pages.Submissions.IndexModel

@{
    ViewData["Title"] = "Create submissions";
    ViewData["AdminRoute"] = "../Submissions/AuthorIndex";
    ViewData["AuthorRoute"] = "../Submissions/AuthorIndex";
    // TODO: Needs to handle implicit teams - ViewData["PlayRoute"] = "../Submissions/Index";
    ViewData["RoutingPuzzleId"] = ViewContext.RouteData.Values["puzzleId"];
}

<h2>Submissions for @Model.Puzzle.Name</h2>
<hr />
<div>
    <a asp-page="/Teams/Play" asp-route-teamId="@Model.Team.ID">Back to puzzle list</a>
</div>
<br />
<div class="row">
    <div class="col-md-4">
        @if (!string.IsNullOrEmpty(Model.AnswerToken))
        {
            <div class="alert alert-success" role="alert">
                You got it! Correct answer: @Model.AnswerToken
            </div>
        }
        else if (!@Model.Event.IsAnswerSubmissionActive)
        {
            <div class="col-md-12" style="padding-bottom: 15px;">
                <h3>This event is not in session. No submissions will be accepted at this time.</h3>
            </div>
        }
        else if (Model.PuzzleState.IsEmailOnlyMode)
        {
            <div class="alert alert-danger" role="alert">
                You have submitted too many wrong responses. Please email your solutions to <a href="mailto:@(Model.PuzzleState?.Puzzle.SupportEmailAlias ?? (Model.Event?.ContactEmail ?? "puzzhunt@microsoft.com"))">@(Model.PuzzleState?.Puzzle.SupportEmailAlias ?? (Model.Event?.ContactEmail ?? "puzzhunt@microsoft.com"))</a>.
            </div>
        }
        else if (Model.PuzzleState.IsTeamLockedOut)
        {
            <div class="alert alert-danger" role="alert">
                You are locked out. Please wait <span id="LockoutTimer">@Model.PuzzleState.LockoutTimeRemaining.ToString(@"mm\:ss")</span> before attempting another submission.
            </div>
        }
        else if (Model.PuzzlesCausingGlobalLockout.Count != 0 && !Model.PuzzlesCausingGlobalLockout.Contains(Model.Puzzle))
        {
            <div class="alert alert-danger" role="alert">
                You are in global lockout until time expires on '@Model.PuzzlesCausingGlobalLockout[0].Name', or it is solved. Go help your teammates with that puzzle!
            </div>
        }
        else
        {
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="SubmissionText" class="control-label">Answer</label>
                    <input asp-for="SubmissionText" class="form-control" />
                    <span asp-validation-for="SubmissionText" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </form>
        }
    </div>
</div>

<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].TimeSubmitted)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].Submitter.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Submissions[0].SubmissionText)
                </th>
                <th>
                    Response
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Submissions)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeSubmitted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Submitter.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubmissionText)
                </td>
                <td>
                    @(item.Response != null ? item.Response.ResponseText : "Incorrect")
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @if (@Model.PuzzleState.LockoutExpiryTime != null)
    {
        <script type="text/javascript">
            var unlockTime = new Date(Date.UTC(
                @Model.PuzzleState.LockoutExpiryTime.Value.Year,
                @Model.PuzzleState.LockoutExpiryTime.Value.Month-1,
                @Model.PuzzleState.LockoutExpiryTime.Value.Day,
                @Model.PuzzleState.LockoutExpiryTime.Value.Hour,
                @Model.PuzzleState.LockoutExpiryTime.Value.Minute,
                @Model.PuzzleState.LockoutExpiryTime.Value.Second));

            setInterval(function () {
                var timer = document.getElementById("LockoutTimer");
                if (timer === null) {
                    return;
                }
                var timeDeltaSeconds = Math.floor((unlockTime - Date.now()) / 1000);
                if (timeDeltaSeconds <= 0) {
                    window.location.reload(false); 
                }
                var minutesLeft = Math.floor(timeDeltaSeconds / 60);
                var secondsLeft = timeDeltaSeconds % 60;
                timer.innerText = minutesLeft + ":" + (secondsLeft < 10 ? "0" + secondsLeft : secondsLeft);
            }, 1000);
        </script>
    }
}
