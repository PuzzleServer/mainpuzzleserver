@page "/{eventId}/{eventRole}/Hints/AuthorIndex/{puzzleId?}"
@model ServerCore.Pages.Hints.AuthorIndexModel
@{
    ViewData["Title"] = "AuthorIndex";
    ViewData["AdminRoute"] = "../Hints/AuthorIndex";
    ViewData["AuthorRoute"] = "../Hints/AuthorIndex";
    // TODO: Needs to handle implicit teams - ViewData["PlayRoute"] = "../Submissions/Index";
    ViewData["RoutingPuzzleId"] = ViewContext.RouteData.Values["puzzleId"];

    if (Model.Puzzle != null)
    {
        Layout = "../Puzzles/_puzzleManagementLayout.cshtml";
    }
    else if (Model.Team != null)
    {
        Layout = "../Teams/_teamLayout.cshtml";
    }
    // TODO: Do we need a combined layout, or is that rare enough as to be unnecessary? Maybe those bar layouts should be sections/components?
}

<h2>@if (Model.Puzzle != null) { <text>@Model.Puzzle.Name:</text> } Hints @if (Model.Team != null) { <text>by @Model.Team.Name</text> }</h2>

<div>
    @if(Model.Puzzle != null) { <a asp-page="./AuthorIndex" asp-route-puzzleId="" asp-route-teamId="@Model.Team?.ID">Clear Puzzle Filter</a> }
    @if(Model.Puzzle != null && Model.Team != null) { <text>|</text> }  
    @if(Model.Team != null) { <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="">Clear Team Filter</a> }  
    @if(Model.Puzzle != null && Model.Team != null) { <text>|</text> <a asp-page="./AuthorIndex" asp-route-puzzleId="" asp-route-teamId="">Clear All Filters</a> }  
</div>

<br />
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@Model.Team?.ID" asp-route-sort="@(Model.SortForColumnLink(AuthorIndexModel.SortOrder.TeamAscending, AuthorIndexModel.SortOrder.TeamDescending))">
                        Team Name
                    </a>
                </th>
                <th>
                    <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@Model.Team?.ID" asp-route-sort="@(Model.SortForColumnLink(AuthorIndexModel.SortOrder.PuzzleAscending, AuthorIndexModel.SortOrder.PuzzleDescending))">
                        Puzzle
                    </a>
                </th>
                <th>
                    <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@Model.Team?.ID" asp-route-sort="@(Model.SortForColumnLink(AuthorIndexModel.SortOrder.DescriptionAscending, AuthorIndexModel.SortOrder.DescriptionDescending))">
                        @Html.DisplayNameFor(model => model.HintStatePerTeam[0].Hint.Description)
                    </a>
                </th>
                <th>
                    <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@Model.Team?.ID" asp-route-sort="@(Model.SortForColumnLink(AuthorIndexModel.SortOrder.CostAscending, AuthorIndexModel.SortOrder.CostDescending))">
                        @Html.DisplayNameFor(model => model.HintStatePerTeam[0].Hint.Cost)
                    </a>
                </th>
                <th>
                    <a asp-page="./AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@Model.Team?.ID" asp-route-sort="@(Model.SortForColumnLink(AuthorIndexModel.SortOrder.TimeAscending, AuthorIndexModel.SortOrder.TimeDescending))">
                        @Html.DisplayNameFor(model => model.HintStatePerTeam[0].UnlockTime)
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.HintStatePerTeam)
            {
            <tr>
                <td>
                    <a asp-page="AuthorIndex" asp-route-puzzleId="@Model.Puzzle?.ID" asp-route-teamId="@item.Team.ID">@Html.DisplayFor(modelItem => item.Team.Name)</a>
                </td>
                <td>
                    <a asp-page="AuthorIndex" asp-route-puzzleId="@item.Hint.Puzzle.ID" asp-route-teamId="@Model.Team?.ID">@Html.DisplayFor(modelItem => item.Hint.Puzzle.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hint.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hint.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnlockTime)
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

