@page "/{eventId}/{eventRole}/Checklist"
@model ServerCore.Pages.Puzzles.PuzzleChecklistModel

@{
    ViewData["Title"] = "Puzzle Checklist";
    ViewData["AdminRoute"] = "/Puzzles/Checklist";
    ViewData["AuthorRoute"] = "/Puzzles/Checklist";
}

<h2>@Model.Event.Name Puzzle Checklist (@Model.PuzzleData.Count):</h2>

<p>
    <a asp-page="/Puzzles/Index">Back to puzzle list</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Module
            </th>
            <th>
                Author(s)
            </th>
            <th>
                Puzzle file
            </th>
            <th>
                Answer file
            </th>
            <th>
                Min pre-requisite count
            </th>
            <th>
                Pre-requisites
            </th>
            <th>
                Response count
            </th>
            <th>
                Has answer
            </th>
            @if (!Model.Event.HideHints)
            {
                <th>
                    Hint count
                </th>
                <th>
                    Hint cost
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PuzzleData)
        {
        <tr>
            <td>
                <a asp-Page="./Edit" asp-route-puzzleid=@item.Puzzle.ID>@Html.DisplayFor(modelItem => item.Puzzle.Name)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Puzzle.Group)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Authors)
            </td>
            <td>
                @if (item.Puzzle.CustomURL != null)
                {
                    <a href="@ServerCore.Helpers.PuzzleHelper.GetFormattedUrl(item.Puzzle, Model.Event.ID)" target="_blank">Link</a>
                }
                else if (item.PuzzleFile != null)
                {
                    @Html.ActionLink("File", "Index", "Files", new { eventId = Model.Event.ID, filename = item.PuzzleFile.ShortName }, new { target = "_blank" })
                }
            </td>
            <td>
                @if (item.AnswerFile != null)
                {
                    @Html.ActionLink("File", "Index", "Files", new { eventId = Model.Event.ID, filename = item.AnswerFile.ShortName }, new { target = "_blank" })
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Puzzle.MinPrerequisiteCount) of @Html.DisplayFor(modelItem => item.PrerequisitesCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prerequisites)
                @if (item.Puzzle.MinPrerequisiteCount > item.PrerequisitesCount)
                {
                    <font color="red">WARNING: Fewer prereqs than min</font>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Responses.ResponseCount)
            </td>
            <td>
                @if (item.Responses.HasAnswer)
                {
                    <p>&#10004;</p>
                }
            </td>
            @if (!Model.Event.HideHints)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Hints)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.TotalHintCost)
                </td>
            }
        </tr>
        }
        <tr>
            <td>
                <b>Total</b>
            </td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            @if (!Model.Event.HideHints)
            {
                <td>
                    @Model.TotalHints
                </td>
                <td>
                    $@Model.TotalHintCost
                </td>
            }
        </tr>
    </tbody>
</table>