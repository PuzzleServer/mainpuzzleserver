@page  "/{eventId}/{eventRole}/Puzzles/Feedback/{puzzleId}"
@model ServerCore.Pages.Puzzles.FeedbackModel

@{
    ViewData["Title"] = "Puzzle feedback";
    ViewData["AdminRoute"] = "../Puzzles/Feedback";
    ViewData["AuthorRoute"] = "../Puzzles/Feedback";
    ViewData["PlayRoute"] = "../Puzzles/SubmitFeedback";
    ViewData["RoutingPuzzleId"] = ViewContext.RouteData.Values["puzzleId"];
    Layout = "_puzzleManagementLayout.cshtml";
}

<h2>@Html.DisplayFor(model => model.Puzzle.Name): Feedback</h2>

<div>
    <h3><b>Avg Fun Rating:</b> @Model.FunScore</h3>
    <br>
    <h3><b>Avg Difficulty Rating:</b> @Model.DiffScore</h3>
</div>

<br>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Feedbacks[0].Submitter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Feedbacks[0].SubmissionTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Feedbacks[0].WrittenFeedback)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Feedbacks[0].Difficulty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Feedbacks[0].Fun)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Feedbacks) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Submitter.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubmissionTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WrittenFeedback)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Difficulty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fun)
            </td>
        </tr>
}
    </tbody>
</table>
