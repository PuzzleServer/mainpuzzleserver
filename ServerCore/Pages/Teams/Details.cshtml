@page "/{eventId}/{eventRole}/Teams/{teamId}/Details"
@model ServerCore.Pages.Teams.DetailsModel

@{
    ViewData["Title"] = "Team Details";
    //Needs route data - ViewData["AdminRoute"] = "/Teams/Details";
    //Needs route data - ViewData["AuthorRoute"] = "/Teams/Details";
    //Needs route data - ViewData["PlayRoute"] = "/Teams/Details";
    Layout = "_teamLayout.cshtml";
}
@using Microsoft.AspNetCore.Http.Extensions @* for GetEncodedUrl *@

<!--TODO: Consider moving if other pages use this format-->
<style>
    .column {
        float: left;
        width: 50%;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }
</style>

<h2>@Html.DisplayFor(model => model.Team.Name) Team</h2>

@if (Model.EventRole != ModelBases.EventRole.author)
{
    <div>
        <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID">Edit team details</a> |
        <a asp-page="./Delete" asp-route-teamId="@Model.Team.ID">Delete team</a>
    </div>
}

<div>
    <hr />

    <div class="row">
        <div class="column">
            <h3>Team details</h3>
            <dl>
                <!-- class="dl-horizontal"> -->
                <dt>
                    Team name
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Team.Name)
                </dd>
                <!-- TODO: Conditionally show/hide based on event property (not needed for PuzzleHunt)
                <dt>
                    @Html.DisplayNameFor(model => model.Team.RoomID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Team.RoomID)
                </dd>
                -->
                <dt>
                    Team room
                </dt>
                <dd>
                    @if (Model.Team.CustomRoom == null)
                    {
                        <div>(none - please enter this before the start of the event)</div>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Team.CustomRoom)
                    }
                </dd>
                <dt>
                    Primary phone number
                </dt>
                <dd>
                    @if (Model.Team.PrimaryPhoneNumber == null)
                    {
                        <div>(none - please enter this before the start of the event)</div>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Team.PrimaryPhoneNumber)
                    }
                </dd>
                <dt>
                    Secondary phone number (optional)
                </dt>
                <dd>
                    @if (Model.Team.SecondaryPhoneNumber == null)
                    {
                        <div>(none)</div>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Team.SecondaryPhoneNumber)
                    }
                </dd>
                <dt>
                    Primary contact e-mail (optional)
                </dt>
                <dd>
                    @if (Model.Team.PrimaryContactEmail == null)
                    {
                        <div>(none)</div>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Team.PrimaryContactEmail)
                    }
                </dd>
                <dt>
                    Allow anonymous applications
                </dt>
                <dd>
                    @if (Model.Team.IsLookingForTeammates)
                    {
                        <div>Yes (this team shows up on the list of teams that anyone can apply to)</div>
                    }
                    else
                    {
                        <div>No (only people who are sent an application link directly will be able to apply)</div>
                    }
                </dd>
            </dl>
        </div>
        <div class="column">
            <div>
                <h3>Current members (@(Model.Members.Count))</h3>
                @{ bool canAdd = Model.EventRole == ModelBases.EventRole.admin; }

            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Members[0].Member.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Members[0].Member.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Members[0].Member.EmployeeAlias)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Members)
                    {
                        <tr>
                            <td>
                                @if (Model.LoggedInUser.IsGlobalAdmin)
                                {
                                    <a asp-area="Identity" asp-page="/Account/Edit" asp-route-userId="@item.Member.ID" asp-route-returnUrl="@Request.GetEncodedUrl()">@Html.DisplayFor(modelItem => item.Member.Name)</a>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Member.Name)
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Member.Email)
                            </td>
                            <td>
                                @if (item.Member.EmployeeAlias == null)
                                {
                                    <p>N/A</p>
                                }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.Member.EmployeeAlias);
                                }
                            </td>
                            @if (Model.EventRole == ModelBases.EventRole.admin || Model.Event.IsTeamMembershipChangeActive)
                            {
                                if (Model.EventRole == ModelBases.EventRole.play && Model.Members.Count == 1)
                                {
                                    <td>
                                        (Can't remove last member)
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <a asp-page-handler="RemoveMember" asp-route-teamId="@Model.Team.ID" asp-route-teamMemberId="@item.ID" onclick="return confirm('Are you sure you want to remove @item.Member.Name from @Model.Team.Name?')">Remove</a>
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
            @if (!Model.Event.IsTeamMembershipChangeActive)
            {
                <div class="alert alert-danger" role="alert">
                    This event is not currently open for membership changes.
                </div>
            }
            else if (Model.Members.Count >= Model.Event.MaxTeamSize)
            {
                <div class="alert alert-danger" role="alert">
                    This team is full.
                </div>
            }
            else
            {
                canAdd = true;
            }
            @if (canAdd)
            {
                <h3>Invite teammates</h3>
                <p>Copy the link below and send it to teammates to give them a direct link to request to join this team. After they request to join the team you can accept them into the team using the table below.</p>
                <a asp-page="./Apply" asp-route-eventRole="play" asp-route-teamId="@Model.Team.ID">Team application link (copy me and email me!)</a>
                <br />
                <br />
                @if (Model.Team.IsLookingForTeammates)
                {
                    <p>Note: Your team is currently marked as looking for anonymous teammates. You may get applications from people who you did not send the link to. To change this, edit your team details <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID"> here</a>.</p>

                }
                else
                {
                    <p>Note: Your team is currently marked as not looking for anonymous teammates. Sending this link is the only way people will find your team. To change this, edit your team details <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID"> here</a>.</p>
                }


                <h3>Pending requests  (@Model.Users.Count)</h3>
                <div>
                    @if (Model.EventRole == ModelBases.EventRole.admin)
                    {
                        <a asp-page="./AddMember" asp-route-teamId="@Model.Team.ID"> | Add a different user</a>
                    }
                </div>

                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Users[0].Item1.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Users[0].Item1.Email)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Users[0].Item1.EmployeeAlias)
                            </th>
                            <th>
                                Add player to team
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Users)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Item1.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Item1.Email)
                                </td>
                                <td>
                                    @if (item.Item1.EmployeeAlias == null)
                                    {
                                        <p>N/A</p>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Item1.EmployeeAlias);
                                    }
                                </td>
                                <td>
                                    <a asp-page-handler="AddMember" asp-route-teamId="@Model.Team.ID" asp-route-userId="@item.Item1.ID" asp-route-applicationId="@item.Item2">Add</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>