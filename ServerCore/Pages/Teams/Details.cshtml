@page "/{eventId}/{eventRole}/Teams/{teamId}/Details"
@model ServerCore.Pages.Teams.DetailsModel

@{
    ViewData["Title"] = "Team Details";
    //Needs route data - ViewData["AdminRoute"] = "/Teams/Details";
    //Needs route data - ViewData["AuthorRoute"] = "/Teams/Details";
    //Needs route data - ViewData["PlayRoute"] = "/Teams/Details";
    Layout = "_teamLayout.cshtml";
}
@using Microsoft.AspNetCore.Http.Extensions @* for GetEncodedUrl *@
@using System.Text @* for StringBuilder *@
@using ServerCore.DataModel;

@{
    var mailtoUrl = new StringBuilder("mailto:");

    if (Model.Team.IsDisqualified)
    {
        // to: Add the proper support agent as recipient
        mailtoUrl.Append(Model.Event?.ContactEmail ?? "puzzhunt@microsoft.com");
        // CC the team's email address in case the account sending the e-mail is a personal one that's not associated with the event
        if (Model.Team.PrimaryContactEmail != null)
        {
            mailtoUrl.Append("?cc=");
            mailtoUrl.Append(Uri.EscapeDataString(Model.Team.PrimaryContactEmail));
        }

        // subject: Make this be about this event
        mailtoUrl.Append("&subject=");
        mailtoUrl.Append(Uri.EscapeDataString("[" + Model.Event.Name + "]"));
        // subject: Make this be from this team
        mailtoUrl.Append(Uri.EscapeDataString(" [" + Model.Team.Name + "]"));

        // request requalification
        // subject: Add the disqualified signifier
        mailtoUrl.Append(Uri.EscapeDataString(" [⚠ Team Disqualified ⚠]"));
        // body: Invite team member to give details
        mailtoUrl.Append("&body=");
        mailtoUrl.Append(Uri.EscapeDataString("Use this mail to explain anything you think we need to know."));
        mailtoUrl.Append(Environment.NewLine);
        mailtoUrl.Append(Environment.NewLine);
    }
}

<!--TODO: Consider moving if other pages use this format-->
<style>
    .column {
        float: left;
        width: calc(50% - 40px);
        margin: 0px 20px;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }
</style>

<h2>@(Model.Team.Name) Team</h2>

@if (Model.Team.IsDisqualified)
{
    <div class="alert alert-danger" role="alert">
        Your team has been disqualified from the event. You are welcome to
        continue solving puzzles for fun, but your team will no longer appear
        in the final standings and is not eligible for any awards or prizes
        that the event may offer. If you have any questions, please contact
        <a href="@mailtoUrl"> this email</a>.
    </div>
}

@if (Model.EventRole != ModelBases.EventRole.author)
{
    <div>
        <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID">Edit team details</a> |
        @if (Model.EventRole == ModelBases.EventRole.admin)
        {
            <text>
                <a asp-page="/Events/Mailer" asp-route-group="Players" asp-route-teamId="@Model.Team.ID">Mail Players</a> |
            </text>
        }
        <a asp-page="./Delete" asp-route-teamId="@Model.Team.ID">Delete team</a> |
        @if (Model.EventRole == ModelBases.EventRole.admin)
        {
            <a asp-page="./Disqualify"
               asp-route-teamId="@Model.Team.ID">
                @(Model.Team.IsDisqualified ? "Requalify Team" : "Disqualify Team")
            </a>
        }
    <br />
    </div>
}

<div>
    <hr />

    <div class="row">
        <div class="column">
            <div class="row">
            <h3>Team details</h3>
            <dl>
                <!-- class="dl-horizontal"> -->
                <dt>
                    Team name
                </dt>
                <dd>
                    @Model.Team.Name
                </dd>
                <!-- TODO: Conditionally show/hide based on event property (not needed for PuzzleHunt)
    <dt>
        RoomID
    </dt>
    <dd>
        @Model.Team.RoomID
    </dd>
    -->

                <dt>
                    Team room
                </dt>
                <dd>
                    @if (Model.Team.CustomRoom == null)
                    {
                    @if (Model.Event.IsInternEvent)
                    {
                    <div>(none - will be selected by the organizers prior to the start of the event)</div>
                    }
                    else
                    {
                    <div>(none - please enter this before the start of the event)</div>
                    }
                    }
                    else
                    {
                    @Model.Team.CustomRoom
                    }
                </dd>

                <dt>
                    Primary phone number
                </dt>
                <dd>
                    @if (Model.Team.PrimaryPhoneNumber == null)
                    {
                    <div>(none - please enter this before the start of the event)</div>
                    }
                    else
                    {
                    @Model.Team.PrimaryPhoneNumber
                    }
                </dd>
                <dt>
                    Secondary phone number (optional)
                </dt>
                <dd>
                    @if (Model.Team.SecondaryPhoneNumber == null)
                    {
                    <div>(none)</div>
                    }
                    else
                    {
                    @Model.Team.SecondaryPhoneNumber
                    }
                </dd>
                <dt>
                    Primary contact e-mail (optional)
                </dt>
                <dd>
                    @if (Model.Team.PrimaryContactEmail == null)
                    {
                    <div>(none)</div>
                    }
                    else
                    {
                    @Model.Team.PrimaryContactEmail
                    }
                </dd>
                <dt>
                    Allow unsolicited applications
                </dt>
                <dd>
                    @if (Model.Team.IsLookingForTeammates)
                    {
                    <div>Yes (this team shows up on the list of teams that anyone can apply to)</div>
                    }
                    else
                    {
                    <div>No (only people who are sent an application link directly will be able to apply)</div>
                    }
                </dd>
                <dt>
                    Bio for unsolicited applications (visible to applicants)
                </dt>
                <dd>
                    @if (Model.Team.Bio == null)
                    {
                    <div>(none)</div>
                    }
                    else
                    {
                    @Model.Team.Bio
                    }
                </dd>
            </dl>
            </div>
            @if (Model.Event.EventHasTeamSwag)
            {
                <div class="row">
                    <h2>Pizza</h2>
                    <p>
                        Your team can currently have @Model.EditableLunches pizza(s). If your team wants to opt out of a pizza, select &quot;No Pizza&quot;. If you cannot have any of the options offered due to dietary restrictions, please email <a href="mailto:puzzhunt@microsoft.com">puzzhunt@microsoft.com</a> with details and we'll find an alternative.
                        @if (Model.EditableLunches < Model.SoftMaxLunches && Model.Event.CanChangeLunch)
                        {
                            <span>
                                Recruit @(Model.Event.PlayersPerLunch - ((Model.EligibleForLunch - 1) % Model.Event.PlayersPerLunch)) more in-person player(s) to get another pizza, up to @Model.GlobalMaxLunches pizzas total!
                            </span>
                        }
                    </p>
                    @if (Model.Lunches.Count < Model.EditableLunches && Model.Event.CanChangeLunch)
                    {
                        <h3>Add a pizza</h3>
                        <form method="post">
                            <select asp-for="NewLunch">
                                <option value="">Select a topping</option>
                                <option value="No Pizza">No Pizza</option>
                                @foreach (var topping in DetailsModel.PizzaOptions)
                                {
                                    <option value="@topping">@topping</option>
                                }
                            </select>
                            <button type="submit" asp-page-handler="AddLunch" asp-route-teamId="@Model.Team.ID" asp-route-newLunch="@Model.NewLunch">Add</button>
                        </form>
                    }
                    <h3>Order:</h3>
                    @foreach (TeamLunch lunch in Model.Lunches)
                    {
                        <p>
                            <span>@lunch.Lunch
                                @if (Model.Event.CanChangeLunch)
                                {
                                    <a asp-page-handler="RemoveLunch" asp-route-teamId="@Model.Team.ID" asp-route-lunchId="@lunch.ID">Remove</a>
                                }
                            </span>
                        </p>
                    }
                    @if(Model.Lunches.Count < Model.EditableLunches)
                    {
                        <div>You have not chosen @(Model.EditableLunches - Model.Lunches.Count) pizza(s) yet. If you do not choose, you will get @Model.Event.DefaultLunch.</div>
                    }
                </div>
            }
        </div>
        <div class="column">
            <div>
                <h3>Current members (@(Model.Members.Count))</h3>
                @{ bool canAdd = Model.EventRole == ModelBases.EventRole.admin; }

            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Email
                        </th>
                        <th>
                            EmployeeAlias
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Members)
                    {
                        <tr>
                            <td>
                                @if (Model.LoggedInUser.IsGlobalAdmin)
                                {
                                    <a asp-area="Identity" asp-page="/Account/Edit" asp-route-userId="@item.Member.ID" asp-route-returnUrl="@Request.GetEncodedUrl()">@item.Member.Name</a>
                                }
                                else
                                {
                                    @item.Member.Name
                                }
                            </td>
                            <td>
                                @item.Member.Email
                            </td>
                            <td>
                                @if (item.Member.EmployeeAlias == null)
                                {
                                    <p>N/A</p>
                                }
                                else
                                {
                                    @item.Member.EmployeeAlias
                                }
                            </td>
                            @if (Model.EventRole == ModelBases.EventRole.admin || Model.Event.IsTeamMembershipChangeActive)
                            {
                                if (Model.EventRole == ModelBases.EventRole.play && Model.Members.Count == 1)
                                {
                                    <td>
                                        (Can't remove last member)
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <a asp-page-handler="RemoveMember" asp-route-teamId="@Model.Team.ID" asp-route-teamMemberId="@item.ID" onclick="return confirm('Are you sure you want to remove @item.Member.Name from @Model.Team.Name?')">Remove</a>
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
            @if (!Model.Event.IsTeamMembershipChangeActive)
            {
                <div class="alert alert-danger" role="alert">
                    This event is not currently open for membership changes.
                </div>
            }
            else if (Model.Members.Count >= Model.Event.MaxTeamSize)
            {
                <div class="alert alert-danger" role="alert">
                    This team is full.
                </div>
            }
            else
            {
                canAdd = true;
            }
            @if (canAdd)
            {
                <h3>Invite teammates</h3>
                <p>Copy the sample e-mail below and send it to teammates to give them a direct link to join this team. The link in the mail has a special code that will auto-approve them for your team.</p>
                @if (Model.Team.IsLookingForTeammates)
                {
                    <p>Note: Your team is currently marked as looking for unsolicited teammates. You may get applications from people who you did not send the link to, and you can approve or ignore those requests by visiting this page. To change this, edit your team details <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID"> here</a>.</p>

                }
                else
                {
                    <p>Note: Your team is currently marked as not looking for unsolicited teammates. Sending this link is the only way people will find your team. To change this, edit your team details <a asp-page="./Edit" asp-route-teamId="@Model.Team.ID"> here</a>.</p>
                }

                <p id="emailContent">
                    ------------------
                    <br /><br />Hello,
                    <br /><br />I've created a team to participate in @Model.Event.Name! Click <a asp-page="./Apply" asp-route-eventRole="play" asp-route-teamId="@Model.Team.ID" asp-route-password="@Model.Team.Password">HERE</a> to join my team.
                    <br /><br />Thanks,
                    <br />@Model.LoggedInUser.Name
                    <br /><br />------------------
                </p>
                <h3>Pending requests  (@Model.Users.Count)</h3>
                <div>
                    @if (Model.EventRole == ModelBases.EventRole.admin)
                    {
                        <a asp-page="./AddMember" asp-route-teamId="@Model.Team.ID">Add a different user</a>
                    }
                </div>

                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Email
                            </th>
                            <th>
                                EmployeeAlias
                            </th>
                            <th>
                                Approve application
                            </th>
                            <th>
                                Reject application
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Users)
                        {
                            <tr>
                                <td>
                                    @item.Item1.Name
                                </td>
                                <td>
                                    @item.Item1.Email
                                </td>
                                <td>
                                    @if (item.Item1.EmployeeAlias == null)
                                    {
                                        <p>N/A</p>
                                    }
                                    else
                                    {
                                        @item.Item1.EmployeeAlias
                                    }
                                </td>
                                <td>
                                    <a asp-page-handler="AddMember" asp-route-teamId="@Model.Team.ID" asp-route-applicationId="@item.Item2">Approve</a>
                                </td>
                                <td>
                                    <a asp-page-handler="RejectMember" asp-route-teamId="@Model.Team.ID" asp-route-applicationId="@item.Item2">Reject</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>