@page "/{eventId}/{eventRole}/Teams/{teamId}/Play"
@model ServerCore.Pages.Teams.PlayModel

@{
    ViewData["Title"] = "Puzzles";
    ViewData["AdminRoute"] = "/Puzzles/Index";
    ViewData["AuthorRoute"] = "/Puzzles/Index";
    // Needs route data - ViewData["PlayRoute"] = "/Teams/Play";
}

<h2>Puzzles</h2>
<div>
    <a asp-page="/Teams/Answers" asp-route-teamId="@Model.TeamID">View All Correct Answers</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.GroupAscending, PlayModel.SortOrder.GroupDescending))">
                    @Html.DisplayNameFor(model => model.PuzzleViews[0].Group)
                </a>
            </th>
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.PuzzleAscending, PlayModel.SortOrder.PuzzleDescending))">
                    Puzzle
                </a>
            </th>
            @if (Model.ShowAnswers)
            {
                <th>
                    Answer
                </th>
            }
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.SolveAscending, PlayModel.SortOrder.SolveDescending))">
                    Solve
                </a>
            </th>
            <th>
                Hints
            </th>
            @if (Model.AllowFeedback)
            {
            <th>
                Feedback
            </th>
            }
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PuzzleViews) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Group)
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.Errata))
                {
                <text>&#x26A0; </text>
                }
                
                @if (item.CustomUrl != null)
                {
                <a href="@ServerCore.Helpers.PuzzleHelper.GetFormattedUrl(item.CustomUrl, item.ID, Model.Event.ID)" target="_blank">@item.Name</a>
                }
                else if (item.Content != null)
                {
                @Html.ActionLink(item.Name, "Index", "Files", new { eventId = Model.Event.ID, filename = item.Content.ShortName }, new { target = "_blank" })
                }
                else
                {
                @Html.DisplayFor(modelItem => item.Name)
                }
            </td>
            @if (Model.ShowAnswers)
            {
                <td>
                    @if (item.Answer != null)
                    {
                        @Html.ActionLink("View answer", "Index", "Files", new { eventId = Model.Event.ID, filename = item.Answer.ShortName }, new { target = "_blank" })
                    }
                </td>
            }
            <td>
                <a asp-page="/Submissions/Index" asp-route-puzzleId="@item.ID">
                    @if (item.SolvedTime != null)
                    {
                        <text>Solved on </text>@Html.Raw(Model.LocalTime(item.SolvedTime))
                    }
                    else if (@Model.Event.IsAnswerSubmissionActive)
                    {
                        <text>Submit Answer</text>
                    }
                    else
                    {
                        <text>See past submissions</text>
                    }
                </a>
            </td>
            <td>
                <a asp-page="./Hints" asp-route-puzzleid="@item.ID" asp-route-teamId="@Model.TeamID">Hints</a>
            </td>
            @if (Model.AllowFeedback)
            {
            <td>
                <a asp-Page="/Puzzles/SubmitFeedback" asp-route-puzzleid="@item.ID">Submit feedback</a>
            </td>
            }
        </tr>
    }
    </tbody>
</table>

<p>Note: Puzzles with a &#x26A0; before the name have errata, which will be provided on that puzzle's answer submission page.</p>
