@page "/{eventId}/{eventRole}/Teams/Play"
@model ServerCore.Pages.Teams.PlayModel

@{
    ViewData["Title"] = "Puzzles";
    ViewData["AdminRoute"] = "/Puzzles/Index";
    ViewData["AuthorRoute"] = "/Puzzles/Index";
    ViewData["PlayRoute"] = "/Teams/Play";
    bool showAnswers = Model.Event.AnswersAvailableBegin <= DateTime.UtcNow;
}

<h2>Puzzles</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.GroupAscending, PlayModel.SortOrder.GroupDescending))">
                    @Html.DisplayNameFor(model => model.PuzzlesWithState[0].Puzzle.Group)
                </a>
            </th>
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.PuzzleAscending, PlayModel.SortOrder.PuzzleDescending))">
                    Puzzle
                </a>
            </th>
            @if (showAnswers)
            {
                <th>
                    Answer
                </th>
            }
            <th>
                <a asp-page="./Play" asp-route-teamId="@Model.TeamID" asp-route-sort="@(Model.SortForColumnLink(PlayModel.SortOrder.SolveAscending, PlayModel.SortOrder.SolveDescending))">
                    Solve
                </a>
            </th>
            <th>
                Hints
            </th>
            <th>
                Feedback
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PuzzlesWithState) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Puzzle.Group)
            </td>
            <td>
                @if (item.Puzzle.CustomURL != null)
                {
                    <a href="@ServerCore.Helpers.PuzzleHelper.GetFormattedUrl(item.Puzzle)">@item.Puzzle.Name</a>
                }
                else if (item.Puzzle.PuzzleFile != null)
                {
                    @Html.ActionLink(item.Puzzle.Name, "Index", "Files", new { eventId = Model.Event.ID, filename = item.Puzzle.PuzzleFile.ShortName })
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Puzzle.Name)
                }
            </td>
            @if (showAnswers)
            {
                <td>
                    @if (item.Puzzle.AnswerFile != null)
                    {
                        @Html.ActionLink(item.Puzzle.AnswerFile.ShortName, "Index", "Files", new { eventId = Model.Event.ID, filename = item.Puzzle.AnswerFile.ShortName })
                    }
                </td>
            }
            <td>
                <a asp-page="/Submissions/Index" asp-route-puzzleId="@item.Puzzle.ID">
                    @if (item.State.SolvedTime != null)
                    {
                        <text>Solved at </text>@item.State.SolvedTime
                    }
                    else if (@Model.Event.IsAnswerSubmissionActive)
                    {
                        <text>Submit Answer</text>
                    }
                    else
                    {
                        <text>See past submissions</text>
                    }
                </a>
            </td>
            <td>
                <a asp-page="./Hints" asp-route-puzzleid="@item.Puzzle.ID" asp-route-teamId="@Model.TeamID">Hints</a>
            </td>
            <td>
                <a asp-Page="/Puzzles/SubmitFeedback" asp-route-puzzleid="@item.Puzzle.ID">Submit feedback</a>
            </td>
        </tr>
    }
    </tbody>
</table>
