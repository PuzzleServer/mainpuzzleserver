@page "/{eventId}/{eventRole}/Events/Details"
@model ServerCore.Pages.Events.DetailsModel

@{
    ViewData["Title"] = "Event details";
    ViewData["AdminRoute"] = "/Events/Details";
    ViewData["AuthorRoute"] = "/EventSpecific/Index";
    ViewData["PlayRoute"] = "/EventSpecific/Index";
}

<h2>@Model.Event.Name: Details</h2>
<h3><span style="color: red">ALL TIMES UTC! Current time is @DateTime.UtcNow.ToShortTimeString()</span></h3>

<a asp-page="./Edit">Edit</a> | <a asp-page="./Import">Import</a> | <a asp-page="./Delete">Delete</a>

<div>
    <hr />
    <table class="table-definitions">
        <tr>
            <td>Name</td>
            <td>@Model.Event.Name</td>
        </tr>
        <tr>
            <td>UrlString</td>
            <td>@Model.Event.UrlString</td>
        </tr>
        <tr>
            <td>HomePartial</td>
            <td>@Model.Event.HomePartial</td>
        </tr>
        <tr>
            <td>SinglePlayerPuzzleTitle</td>
            @if (Model.Event.ShouldShowSinglePlayerPuzzles)
            {
                <td>
                    @Model.Event.SinglePlayerPuzzleTitle
                </td>
            }
            else
            {
                <td>
                    NONE (if there is no title, SinglePlayerPuzzles will not be shown).
                </td>
            }
        </tr>
        <tr>
            <td>ContactEmail</td>
            <td>@Model.Event.ContactEmail</td>
        </tr>
        <tr>
            <td>MaxNumberOfTeams</td>
            <td>@Model.Event.MaxNumberOfTeams</td>
        </tr>
        <tr>
            <td>MaxTeamSize</td>
            <td>@Model.Event.MaxTeamSize</td>
        </tr>
        <tr>
            <td>MaxExternalsPerTeam</td>
            <td>@Model.Event.MaxExternalsPerTeam</td>
        </tr>
        <tr>
            <td>IsRemote</td>
            <td>@Model.Event.IsRemote</td>
        </tr>
        <tr>
            <td>AllowsRemote</td>
            <td> Model.Event.AllowsRemote </td>
        </tr>
        <tr>
            <td>
                EmbedPuzzles
            </td>
            <td>
                @Model.Event.EmbedPuzzles
            </td>
        </tr>
        <tr>
            <td>
                IsInternEvent
            </td>
            <td>
                @Model.Event.IsInternEvent
            </td>
        </tr>
        <tr>
            <td>
                HasSwag
            </td>
            <td>
                @Model.Event.HasSwag
            </td>
        </tr>
        <tr>
            <td>
                HasTShirts
            </td>
            <td>
                @Model.Event.HasTShirts
            </td>
        </tr>
        <tr>
            <td>
                HasIndividualLunch
            </td>
            <td>
                @Model.Event.HasIndividualLunch
            </td>
        </tr>
        <tr>
            <td>
                EventHasTeamSwag
            </td>
            <td>
                @Model.Event.EventHasTeamSwag
            </td>
        </tr>
        <tr>
            <td>
                PlayersPerLunch
            </td>
            <td>
                @Model.Event.PlayersPerLunch
            </td>
        </tr>
        <tr>
            <td>
                DefaultLunch
            </td>
            <td>
                @Model.Event.DefaultLunch
            </td>
        </tr>
        <tr>
            <td>
                HideHints
            </td>
            <td>
                @Model.Event.HideHints
            </td>
        </tr>
        <tr>
            <td>
                TeamRegistrationBegin
            </td>
            <td>
                @Model.Event.TeamRegistrationBegin
            </td>
        </tr>
        <tr>
            <td>
                TeamRegistrationEnd
            </td>
            <td>
                @Model.Event.TeamRegistrationEnd
            </td>
        </tr>
        <tr>
            <td>
                TeamNameChangeEnd
            </td>
            <td>
                @Model.Event.TeamNameChangeEnd
            </td>
        </tr>
        <tr>
            <td>
                TeamMembershipChangeEnd
            </td>
            <td>
                @Model.Event.TeamMembershipChangeEnd
            </td>
        </tr>
        <tr>
            <td>
                TeamMiscDataChangeEnd
            </td>
            <td>
                @Model.Event.TeamMiscDataChangeEnd
            </td>
        </tr>
        <tr>
            <td>
                TeamDeleteEnd
            </td>
            <td>
                @Model.Event.TeamDeleteEnd
            </td>
        </tr>
        <tr>
            <td>
                LunchReportDate
            </td>
            <td>
                @Model.Event.LunchReportDate
            </td>
        </tr>
        <tr>
            <td>
                EventBegin
            </td>
            <td>
                @Model.Event.EventBegin
            </td>
        </tr>
        <tr>
            <td>
                AnswerSubmissionEnd
            </td>
            <td>
                @Model.Event.AnswerSubmissionEnd
            </td>
        </tr>
        <tr>
            <td>
                AnswersAvailableBegin
            </td>
            <td>
                @Model.Event.AnswersAvailableBegin
            </td>
        </tr>
        <tr>
            <td>
                StandingsAvailableBegin
            </td>
            <td>
                @Model.Event.StandingsAvailableBegin
            </td>
        </tr>
        <tr>
            <td>
                StandingsOverride
            </td>
            <td>
                @Model.Event.StandingsOverride
            </td>
        </tr>
        <tr>
            <td>
                ShowFastestSolves
            </td>
            <td>
                @Model.Event.ShowFastestSolves
            </td>
        </tr>
        <tr>
            <td>
                AllowFeedback
            </td>
            <td>
                @Model.Event.AllowFeedback
            </td>
        </tr>
        <tr>
            <td>
                AllowBlazor
            </td>
            <td>
                @Model.Event.AllowBlazor
            </td>
        </tr>
    </table>
</div>
