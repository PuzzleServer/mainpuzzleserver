@page "/{eventId}/{eventRole}/Events/Map"
@model ServerCore.Pages.Events.MapModel

@{
    @using Helpers;

    ViewData["Title"] = "Puzzle State Map";
    ViewData["AdminRoute"] = "/Events/Map";
    ViewData["AuthorRoute"] = "/Events/Map";
    ViewData["PlayRoute"] = "/Events/Standings";
}

<h2>Puzzle State Map</h2>
<div>
    Refresh every: <a asp-page="/Events/Map" asp-route-refresh="60" asp-route-groups="@Model.Groups">1 min</a> | <a asp-page="/Events/Map" asp-route-refresh="120" asp-route-groups="@Model.Groups">2 min</a> | <a asp-page="/Events/Map" asp-route-refresh="300" asp-route-groups="@Model.Groups">5 min</a> | <a asp-page="/Events/Map" asp-route-groups="@Model.Groups">off</a>  | <form style="display:inline" method="get"><label>Grouping: </label><input type="text" asp-for="@Model.Groups"/><input type="submit" asp-page="/Events/Map" asp-route-refresh="@Model.Refresh" asp-route-groups="@Model.Groups" value="Update" /></form>
</div>

<table class="table table-condensed ph-statemap">
            <thead>
                <tr>
                    <th>
                        Rank
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Puzzles
                    </th>
                    <th>
                        Score
                    </th>
                    @foreach (var puzzle in Model.Puzzles)
                    {
                        <th>
                            <a asp-page="/Puzzles/Status" asp-route-puzzleId="@puzzle.Puzzle.ID">@puzzle.Puzzle.PlaintextName (@puzzle.SolveCount)</a>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
        @for (int y = 0; y < Model.Teams.Count; y++) {
            var team = Model.Teams[y];
                <tr>
                    <td>
                        @(team.Rank)
                    </td>
                    <td>
                        <a asp-page="/Teams/Status" asp-route-teamId="@team.Team.ID">@(team.Team.Name)</a>
                    </td>
                    <td>
                        @team.SolveCount
                    </td>
                    <td>
                        @team.Score
                    </td>
            @for (int x = 0; x < Model.Puzzles.Count; x++)
            {
                var teamState = Model.StateMap[x, y] ?? MapModel.StateStats.Default;

                    <td @if (teamState.DisplayLightness < 30) { <text> class= "dark"</text> }  style="background-color: hsl(@teamState.DisplayHue, 100%, @teamState.DisplayLightness%)">
                        <a asp-page="/Submissions/AuthorIndex" asp-route-puzzleId="@Model.Puzzles[x].Puzzle.ID" asp-route-teamId="@Model.Teams[y].Team.ID">@teamState.DisplayText</a>
                    </td>
            }
                </tr>
        }
            </tbody>
</table>
