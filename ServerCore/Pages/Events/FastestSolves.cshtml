@page "/{eventId}/{eventRole}/Events/FastestSolves"
@model ServerCore.Pages.Events.FastestSolvesModel

@{
    @using System;
    @using Helpers;
    ViewData["Title"] = "Fastest Solves";
    ViewData["AdminRoute"] = "/Events/FastestSolves";
    ViewData["AuthorRoute"] = "/Events/FastestSolves";
    ViewData["PlayRoute"] = "/Events/FastestSolves";

    Boolean unsolvedFilter = Model.StateFilter == FastestSolvesModel.PuzzleStateFilter.Unsolved;
}

<h2>Fastest solves</h2>
@if (!string.IsNullOrEmpty(Model.TeamSectionNotShowMessage))
{
    <div><p>@Model.TeamSectionNotShowMessage</p></div>
}
else
{
    <div>
        <a asp-page="./FastestSolves"
           asp-route-teamPuzzleSort="@Model.TeamPuzzleSort"
           asp-route-stateFilter=@(unsolvedFilter ? FastestSolvesModel.PuzzleStateFilter.All : FastestSolvesModel.PuzzleStateFilter.Unsolved)>
            Show @(unsolvedFilter ? "All" : "Unsolved") Puzzles
        </a>
    </div>
    <br />
    <table class="table table-condensed">
        <thead>
            <tr>
                <th>
                    <a asp-page="./FastestSolves"
                       asp-route-teamPuzzleSort="@(Model.SortForColumnLink(FastestSolvesModel.TeamPuzzleSortOrder.PuzzleAscending,
                                                                      FastestSolvesModel.TeamPuzzleSortOrder.PuzzleDescending))"
                       asp-route-stateFilter="@Model.StateFilter">
                        PuzzleName
                    </a>
                </th>
                <th>
                    <a asp-page="./FastestSolves"
                       asp-route-teamPuzzleSort="@(Model.SortForColumnLink(FastestSolvesModel.TeamPuzzleSortOrder.CountAscending,
                                                                      FastestSolvesModel.TeamPuzzleSortOrder.CountDescending))"
                       asp-route-stateFilter="@Model.StateFilter">
                        Teams Solved
                    </a>
                </th>
                <th>
                    First
                </th>
                <th>
                    Second
                </th>
                <th>
                    Third
                </th>
                @if (Model.CurrentTeam != null)
                {
                    <th>
                        Status for @Model.CurrentTeam.Name
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int y = 0; y < Model.TeamPuzzles.Count; y++)
            {
                var puzzle = Model.TeamPuzzles[y];
                Func<TimeSpan, string> convertTimeToString = ts => string.Format("{0:00}.{1:00}:{2:00}:{3:00}", ts.TotalDays, Math.Abs(ts.Hours), Math.Abs(ts.Minutes), Math.Abs(ts.Seconds));

                <tr>
                    <td class="puzzle-list-title-customizable">
                        @(RawHtmlHelper.Display(puzzle.PuzzleName, Model.Event.ID, Html))
                    </td>
                    <td>
                        @(puzzle.SolveCount)
                    </td>
                    @* TODO: Highlight the cell if this is your team's ID  Same for second and third place. *@
                    <td>
                        @if (puzzle.Fastest.Length >= 1)
                        {
                            <text>@puzzle.Fastest[0].Name (@convertTimeToString(puzzle.Fastest[0].Time.Value))</text>
                        }
                    </td>
                    <td>
                        @if (puzzle.Fastest.Length >= 2)
                        {
                            <text>@puzzle.Fastest[1].Name (@convertTimeToString(puzzle.Fastest[1].Time.Value))</text>
                        }
                    </td>
                    <td>
                        @if (puzzle.Fastest.Length >= 3)
                        {
                            <text>@puzzle.Fastest[2].Name (@convertTimeToString(puzzle.Fastest[2].Time.Value))</text>
                        }
                    </td>
                    @if (Model.CurrentTeam != null)
                    {
                        <th>
                            @if (puzzle.IsSolved)
                            {
                                <text>Solved!</text>
                            }
                            else
                            {
                                <text>Unsolved</text>
                            }
                        </th>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@if (Model.Event.ShouldShowSinglePlayerPuzzles)
{
    <br />
    <h2>@Model.Event.SinglePlayerPuzzleTitle solve counts</h2>
    @if (!string.IsNullOrEmpty(Model.SinglePlayerPuzzleSectionNotShowMessage))
    {
        <div><p>@Model.SinglePlayerPuzzleSectionNotShowMessage</p></div>
    }
    else
    {
        <div>
            <a asp-page="./FastestSolves"
               asp-route-singlePlayerPuzzleSort="@Model.SinglePlayerPuzzleSort"
               asp-route-stateFilter=@(unsolvedFilter ? FastestSolvesModel.PuzzleStateFilter.All : FastestSolvesModel.PuzzleStateFilter.Unsolved)>
                Show @(unsolvedFilter ? "All" : "Unsolved") Puzzles
            </a>
        </div>
        <br />
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th>
                        <a asp-page="./FastestSolves"
                           asp-route-singlePlayerPuzzleSort="@(Model.SortForColumnLink(FastestSolvesModel.SinglePlayerPuzzleSortOrder.PuzzleAscending,
                                                                      FastestSolvesModel.SinglePlayerPuzzleSortOrder.PuzzleDescending))"
                           asp-route-stateFilter="@Model.StateFilter">
                            PuzzleName
                        </a>
                    </th>
                    <th>
                        <a asp-page="./FastestSolves"
                           asp-route-singlePlayerPuzzleSort="@(Model.SortForColumnLink(FastestSolvesModel.SinglePlayerPuzzleSortOrder.CountAscending,
                                                                      FastestSolvesModel.SinglePlayerPuzzleSortOrder.CountDescending))"
                           asp-route-stateFilter="@Model.StateFilter">
                            Players solved
                        </a>
                    </th>
                    <th>
                        Status for you
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int y = 0; y < Model.SinglePlayerPuzzles.Count; y++)
                {
                    var puzzle = Model.SinglePlayerPuzzles[y];
                    <tr>
                        <td class="puzzle-list-title-customizable">
                            @(RawHtmlHelper.Display(puzzle.PuzzleName, Model.Event.ID, Html))
                        </td>
                        <td>
                            @(puzzle.SolveCount)
                        </td>
                        <th>
                            @if (puzzle.IsSolved)
                            {
                                <text>Solved!</text>
                            }
                            else
                            {
                                <text>Unsolved</text>
                            }
                        </th>
                    </tr>
                }
            </tbody>
        </table>
    }
}

