@page "/{eventId}/{eventRole}/Events/FastestSolves"
@model ServerCore.Pages.Events.FastestSolvesModel

@{
    @using System;
    ViewData["Title"] = "Fastest Solves";
    ViewData["AdminRoute"] = "/Events/FastestSolves";
    ViewData["AuthorRoute"] = "/Events/FastestSolves";
    ViewData["PlayRoute"] = "/Events/FastestSolves";

    Boolean unsolvedFilter = Model.StateFilter == FastestSolvesModel.PuzzleStateFilter.Unsolved;
}

<h2>Fastest Solves</h2>
<br/>
<div>
    <a class="radioButton"
       asp-page="./FastestSolves"
       asp-route-sort="@Model.Sort"
       asp-route-stateFilter="@FastestSolvesModel.PuzzleStateFilter.All">

        <input id="StateFilter" name="StateFilter" value="All" type="radio" @(unsolvedFilter ? "" : "checked")> All
    </a>
    <a class="radioButton"
       asp-page="./FastestSolves"
       asp-route-sort="@Model.Sort"
       asp-route-stateFilter="@FastestSolvesModel.PuzzleStateFilter.Unsolved">

        <input id="StateFilter" name="StateFilter" value="Unsolved" type="radio" @(unsolvedFilter ? "checked" : "")> Unsolved
    </a>
</div>
<br/>
<table class="table table-condensed">
            <thead>
                <tr>
                    <th>
                        <a  asp-page="./FastestSolves" 
                            asp-route-sort="@(Model.SortForColumnLink(FastestSolvesModel.SortOrder.PuzzleAscending,
                                                                      FastestSolvesModel.SortOrder.PuzzleDescending))"
                            asp-route-stateFilter="@Model.StateFilter">

                            @Html.DisplayNameFor(model => model.Puzzles[0].Puzzle.Name)
                        </a>
                    </th>
                    <th>
                        <a  asp-page="./FastestSolves" 
                            asp-route-sort="@(Model.SortForColumnLink(FastestSolvesModel.SortOrder.CountAscending,
                                                                      FastestSolvesModel.SortOrder.CountDescending))"
                            asp-route-stateFilter="@Model.StateFilter">

                            Teams Solved
                        </a>
                    </th>
                    <th>
                        First
                    </th>
                    <th>
                        Second
                    </th>
                    <th>
                        Third
                    </th>
                    @if (Model.CurrentTeam != null)
                    {
                        <th>
                            Status for @Model.CurrentTeam.Name
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
        @for (int y = 0; y < Model.Puzzles.Count; y++) {
            var puzzle = Model.Puzzles[y];
            Func<TimeSpan, string> convertTimeToString = ts => string.Format("{0:00}.{1:00}:{2:00}:{3:00}", ts.TotalDays, Math.Abs(ts.Hours), Math.Abs(ts.Minutes), Math.Abs(ts.Seconds));

                <tr>
                    <td>
                        @(puzzle.Puzzle.Name)
                    </td>
                    <td>
                        @(puzzle.SolveCount)
                    </td>
                    @* TODO: Highlight the cell if this is your team's ID  Same for second and third place. *@
                    <td>
                        @if (puzzle.Fastest.Length >= 1)
                        {
                            <text>@puzzle.Fastest[0].Name (@convertTimeToString(puzzle.Fastest[0].Time.Value))</text>
                        }
                    </td>
                    <td>
                        @if (puzzle.Fastest.Length >= 2)
                        {
                            <text>@puzzle.Fastest[1].Name (@convertTimeToString(puzzle.Fastest[1].Time.Value))</text>
                        }
                    </td>
                    <td>
                        @if (puzzle.Fastest.Length >= 3)
                        {
                            <text>@puzzle.Fastest[2].Name (@convertTimeToString(puzzle.Fastest[2].Time.Value))</text>
                        }
                    </td>
                    @if (Model.CurrentTeam != null)
                    {
                        <th>
                            @if (puzzle.IsSolved)
                            {
                                <text>Solved!</text>
                            }
                            else
                            {
                                <text>Unsolved</text>
                            }
                        </th>
                    }
                </tr>
        }
            </tbody>
</table>
